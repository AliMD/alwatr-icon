export const palettes = {
  h300: {
    refPrimary: {
      0: '#000000',
      10: '#23005c',
      20: '#381e72',
      25: '#442b7e',
      30: '#4f378a',
      35: '#5b4397',
      40: '#684fa4',
      50: '#8169bf',
      60: '#9b82db',
      70: '#b69df7',
      80: '#d0bcff',
      90: '#e9ddff',
      95: '#f6edff',
      98: '#fef7ff',
      99: '#fffbff',
      100: '#ffffff',
    },

    refSecondary: {
      0: '#000000',
      10: '#1e192b',
      20: '#332d41',
      25: '#3e384c',
      30: '#4a4458',
      35: '#564f64',
      40: '#625b70',
      50: '#7b748a',
      60: '#958da4',
      70: '#b0a7bf',
      80: '#ccc2db',
      90: '#e8def8',
      95: '#f6edff',
      98: '#fef7ff',
      99: '#fffbff',
      100: '#ffffff',
    },

    refTertiary: {
      0: '#000000',
      10: '#31101d',
      20: '#4a2532',
      25: '#56303d',
      30: '#633b48',
      35: '#704654',
      40: '#7e5260',
      50: '#996a78',
      60: '#b58392',
      70: '#d29dac',
      80: '#efb8c7',
      90: '#ffd9e2',
      95: '#ffecf0',
      98: '#fff8f8',
      99: '#fffbff',
      100: '#ffffff',
    },

    refNeutral: {
      0: '#000000',
      10: '#1c1b1e',
      20: '#323033',
      25: '#3d3b3e',
      30: '#48464a',
      35: '#545156',
      40: '#605d62',
      50: '#79767a',
      60: '#938f94',
      70: '#aeaaae',
      80: '#cac5ca',
      90: '#e6e1e6',
      95: '#f4eff4',
      98: '#fdf8fd',
      99: '#fffbff',
      100: '#ffffff',
    },

    refNeutralVariant: {
      0: '#000000',
      10: '#1d1a22',
      20: '#322f37',
      25: '#3d3a43',
      30: '#49454e',
      35: '#55515a',
      40: '#615d66',
      50: '#7a757f',
      60: '#948f99',
      70: '#afa9b4',
      80: '#cac4cf',
      90: '#e7e0eb',
      95: '#f5eefa',
      98: '#fef7ff',
      99: '#fffbff',
      100: '#ffffff',
    },

    refError: {
      0: '#000000',
      10: '#410002',
      20: '#690005',
      25: '#7e0007',
      30: '#93000a',
      35: '#a80710',
      40: '#ba1a1a',
      50: '#de3730',
      60: '#ff5449',
      70: '#ff897d',
      80: '#ffb4ab',
      90: '#ffdad6',
      95: '#ffedea',
      98: '#fff8f7',
      99: '#fffbff',
      100: '#ffffff',
    },
  },
  h270: {
    refPrimary: {
      0: '#000000',
      10: '#001847',
      20: '#002b73',
      25: '#0b3784',
      30: '#1e4390',
      35: '#2c4f9c',
      40: '#3a5ba9',
      50: '#5474c4',
      60: '#6f8ee0',
      70: '#8aa9fd',
      80: '#b2c5ff',
      90: '#dae2ff',
      95: '#eef0ff',
      98: '#faf8ff',
      99: '#fefbff',
      100: '#ffffff',
    },

    refSecondary: {
      0: '#000000',
      10: '#151b2c',
      20: '#2a3042',
      25: '#353b4d',
      30: '#404659',
      35: '#4c5265',
      40: '#585e71',
      50: '#71768b',
      60: '#8a90a5',
      70: '#a5aac1',
      80: '#c0c6dd',
      90: '#dce2f9',
      95: '#eef0ff',
      98: '#faf8ff',
      99: '#fefbff',
      100: '#ffffff',
    },

    refTertiary: {
      0: '#000000',
      10: '#2b122b',
      20: '#412741',
      25: '#4d324d',
      30: '#5a3d59',
      35: '#664965',
      40: '#735471',
      50: '#8d6d8b',
      60: '#a886a5',
      70: '#c4a0c1',
      80: '#e1bbdd',
      90: '#fed7f9',
      95: '#ffebfa',
      98: '#fff7fa',
      99: '#fffbff',
      100: '#ffffff',
    },

    refNeutral: {
      0: '#000000',
      10: '#1b1b1f',
      20: '#303034',
      25: '#3b3b3f',
      30: '#46464a',
      35: '#525256',
      40: '#5e5e62',
      50: '#77777a',
      60: '#919094',
      70: '#acaaaf',
      80: '#c7c6ca',
      90: '#e4e2e6',
      95: '#f2f0f4',
      98: '#fbf8fd',
      99: '#fefbff',
      100: '#ffffff',
    },

    refNeutralVariant: {
      0: '#000000',
      10: '#191b23',
      20: '#2e3038',
      25: '#393b43',
      30: '#45464f',
      35: '#50525a',
      40: '#5c5e67',
      50: '#757780',
      60: '#8f909a',
      70: '#aaabb4',
      80: '#c5c6d0',
      90: '#e1e2ec',
      95: '#f0f0fa',
      98: '#faf8ff',
      99: '#fefbff',
      100: '#ffffff',
    },

    refError: {
      0: '#000000',
      10: '#410002',
      20: '#690005',
      25: '#7e0007',
      30: '#93000a',
      35: '#a80710',
      40: '#ba1a1a',
      50: '#de3730',
      60: '#ff5449',
      70: '#ff897d',
      80: '#ffb4ab',
      90: '#ffdad6',
      95: '#ffedea',
      98: '#fff8f7',
      99: '#fffbff',
      100: '#ffffff',
    },
  },
} as const;

export const generateColors = (palette: typeof palettes.h300) => ({
  primaryLight: palette.refPrimary[40],
  primaryDark: palette.refPrimary[80],
  primaryAuto: 'rgb(var(--sys-color-primary) / <alpha-value>)',
  onPrimaryLight: palette.refPrimary[100],
  onPrimaryDark: palette.refPrimary[20],
  onPrimaryAuto: 'rgb(var(--sys-color-on-primary) / <alpha-value>)',
  primaryContainerLight: palette.refPrimary[90],
  primaryContainerDark: palette.refPrimary[30],
  primaryContainerAuto: 'rgb(var(--sys-color-primary-container) / <alpha-value>)',
  onPrimaryContainerLight: palette.refPrimary[10],
  onPrimaryContainerDark: palette.refPrimary[90],
  onPrimaryContainerAuto: 'rgb(var(--sys-color-on-primary-container) / <alpha-value>)',

  secondaryLight: palette.refSecondary[40],
  secondaryDark: palette.refSecondary[80],
  secondaryAuto: 'rgb(var(--sys-color-secondary) / <alpha-value>)',
  onSecondaryLight: palette.refSecondary[100],
  onSecondaryDark: palette.refSecondary[20],
  onSecondaryAuto: 'rgb(var(--sys-color-on-secondary) / <alpha-value>)',
  secondaryContainerLight: palette.refSecondary[90],
  secondaryContainerDark: palette.refSecondary[30],
  secondaryContainerAuto: 'rgb(var(--sys-color-secondary-container) / <alpha-value>)',
  onSecondaryContainerLight: palette.refSecondary[10],
  onSecondaryContainerDark: palette.refSecondary[90],
  onSecondaryContainerAuto: 'rgb(var(--sys-color-on-secondary-container) / <alpha-value>)',

  tertiaryLight: palette.refTertiary[40],
  tertiaryDark: palette.refTertiary[80],
  tertiaryAuto: 'rgb(var(--sys-color-tertiary) / <alpha-value>)',
  onTertiaryLight: palette.refTertiary[100],
  onTertiaryDark: palette.refTertiary[20],
  onTertiaryAuto: 'rgb(var(--sys-color-on-tertiary) / <alpha-value>)',
  tertiaryContainerLight: palette.refTertiary[90],
  tertiaryContainerDark: palette.refTertiary[30],
  tertiaryContainerAuto: 'rgb(var(--sys-color-tertiary-container) / <alpha-value>)',
  onTertiaryContainerLight: palette.refTertiary[10],
  onTertiaryContainerDark: palette.refTertiary[90],
  onTertiaryContainerAuto: 'rgb(var(--sys-color-on-tertiary-container) / <alpha-value>)',

  backgroundLight: palette.refNeutral[99],
  backgroundDark: palette.refNeutral[10],
  backgroundAuto: 'rgb(var(--sys-color-background) / <alpha-value>)',
  onBackgroundLight: palette.refNeutral[10],
  onBackgroundDark: palette.refNeutral[90],
  onBackgroundAuto: 'rgb(var(--sys-color-on-background) / <alpha-value>)',

  surfaceLight: palette.refNeutral[99],
  surfaceDark: palette.refNeutral[10],
  surfaceAuto: 'rgb(var(--sys-color-surface) / <alpha-value>)',
  onSurfaceLight: palette.refNeutral[10],
  onSurfaceDark: palette.refNeutral[90],
  onSurfaceAuto: 'rgb(var(--sys-color-on-surface) / <alpha-value>)',

  surfaceVariantLight: palette.refNeutral[90],
  surfaceVariantDark: palette.refNeutral[30],
  surfaceVariantAuto: 'rgb(var(--sys-color-surface-variant) / <alpha-value>)',
  onSurfaceVariantLight: palette.refNeutral[30],
  onSurfaceVariantDark: palette.refNeutral[80],
  onSurfaceVariantAuto: 'rgb(var(--sys-color-on-surface-variant) / <alpha-value>)',

  outlineLight: palette.refNeutral[50],
  outlineDark: palette.refNeutral[60],
  outlineVariantAuto: 'rgb(var(--sys-color-outline-variant) / <alpha-value>)',
  outlineVariantLight: palette.refNeutral[80],
  outlineVariantDark: palette.refNeutral[30],
  onOutlineVariantAuto: 'rgb(var(--sys-color-on-outline-variant) / <alpha-value>)',

  errorLight: palette.refError[40],
  errorDark: palette.refError[80],
  errorAuto: 'rgb(var(--sys-color-error) / <alpha-value>)',
  onErrorLight: palette.refError[100],
  onErrorDark: palette.refError[20],
  onErrorAuto: 'rgb(var(--sys-color-on-error) / <alpha-value>)',
  errorContainerLight: palette.refError[90],
  errorContainerDark: palette.refError[30],
  errorContainerAuto: 'rgb(var(--sys-color-error-container) / <alpha-value>)',
  onErrorContainerLight: palette.refError[10],
  onErrorContainerDark: palette.refError[90],
  onErrorContainerAuto: 'rgb(var(--sys-color-on-error-container) / <alpha-value>)',

  inversePrimaryLight: palette.refPrimary[80],
  inversePrimaryDark: palette.refPrimary[40],
  inversePrimaryAuto: 'rgb(var(--sys-color-inverse-primary) / <alpha-value>)',
  inverseSurfaceLight: palette.refNeutral[20],
  inverseSurfaceDark: palette.refNeutral[90],
  inverseSurfaceAuto: 'rgb(var(--sys-color-inverse-surface) / <alpha-value>)',
  inverseOnSurfaceLight: palette.refNeutral[95],
  inverseOnSurfaceDark: palette.refNeutral[25],
  inverseOnSurfaceAuto: 'rgb(var(--sys-color-inverse-on-surface) / <alpha-value>)',

  surfaceTint: palette.refPrimary[40],
  shadow: palette.refNeutral[0],
  scrim: palette.refNeutral[0],
} as const);
