# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json

name: Publish Containers

on:
  workflow_dispatch:

  push:
    branches:
      - next
    tags:
      - 'v*.*.*'

  pull_request:
    paths:
      - 'packages/container/**'
      - '.github/workflows/publish-container.yml'
    branches:
      - next

env:
  REGISTRY: ghcr.io

jobs:
  build:
    if: github.repository_owner == 'AliMD'

    name: Build & Publish Containers
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          - image: alpine
            versions:
              - 3
              - 3.16

    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{env.REGISTRY}}/${{github.repository_owner}}/${{matrix.image}}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}},prefix=alwatr-
            type=semver,pattern={{major}}.{{minor}},prefix=alwatr-
            type=raw,value=${{matrix.versions}}

      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@main

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log into registry ${{env.REGISTRY}}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{env.REGISTRY}}
          username: ${{github.repository_owner}}
          password: ${{secrets.GITHUB_TOKEN}}

      - name: Build and push container image
        id: build-and-push
        uses: docker/build-push-action@v3
        with:
          context: packages/container/${{matrix.image}}
          push: ${{github.event_name != 'pull_request'}}
          tags: ${{steps.meta.outputs.tags}}
          labels: ${{steps.meta.outputs.labels}}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Sign the published container image
        if: ${{github.event_name != 'pull_request'}}
        env:
          COSIGN_EXPERIMENTAL: "true"
        run: echo "${{steps.meta.outputs.tags}}" | xargs -I {} cosign sign {}@${{steps.build-and-push.outputs.digest}}
